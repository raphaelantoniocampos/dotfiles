#!/bin/bash

# Função para perguntar ao usuário se deseja continuar, pular ou sair
ask_user() {
    while true; do
        echo "Deseja continuar (c), pular (p) ou sair (s)?"
        read -r choice
        case "$choice" in
            c) return 0 ;;
            p) return 1 ;;
            s) exit 0 ;;
            *) echo "Opção inválida, tente novamente." ;;
        esac
    done
}

# Atualiza o sistema
echo "Atualizando o sistema..."
ask_user && sudo pacman -Syu --noconfirm

# Instala o Git e clona os dotfiles
echo "Instalando Git e clonando dotfiles..."
ask_user && {
    sudo pacman -S --noconfirm git
    [ ! -d "$HOME/dotfiles" ] && git clone https://github.com/example/dotfiles "$HOME/dotfiles"
}

# Instala o servidor gráfico
echo "Instalando servidor gráfico..."
ask_user && {
    sudo pacman -S --noconfirm xorg
    lspci -v -nn -d ::03xx  # Identificar placa de vídeo para instalação do driver
}

# Instala o Vim
echo "Instalando Vim..."
ask_user && sudo pacman -S --noconfirm vim

# Instala gerenciadores de janela
echo "Escolha o Window Manager: (1) i3 (2) Hyprland"
ask_user && {
    read -r wm_choice
    if [ "$wm_choice" == "1" ]; then
        sudo pacman -S --noconfirm i3 rofi polybar picom
    elif [ "$wm_choice" == "2" ]; then
        sudo pacman -S --noconfirm hyprland hyprpaper hypridle hyprlock wofi waybar
    else
        echo "Opção inválida, pulando instalação do WM."
    fi
}

# Instala e configura o display manager (ly)
echo "Instalando e configurando display manager (ly)..."
ask_user && {
    sudo pacman -S --noconfirm ly
    sudo systemctl enable ly
    sudo systemctl start ly
}

# Instala pacotes de customização
echo "Instalando pacotes de customização..."
ask_user && {
    sudo pacman -S --noconfirm stow neovim starship
    cd "$HOME/dotfiles" && stow .
}

# Instala outros pacotes
echo "Instalando pacotes adicionais..."
ask_user && sudo pacman -S --noconfirm xclip firefox

echo "Setup concluído! Reinicie o sistema para aplicar todas as mudanças."
